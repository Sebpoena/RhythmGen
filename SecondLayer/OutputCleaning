#triplet work - and cleaning in general
#includes deleting values from the output that are not expected rhythm values

import itertools
#triplet related cleaning
triplets = [0.3333, 0.1667, 0.0833, 0.6667, 0.0417, 1.3333, -0.3333, -0.1667, -0.0833, -0.6667, -0.0417, -1.3333]

validTripletSums = [
    (0.125 - 0.002, 0.125 + 0.002),
    (0.25  - 0.002, 0.25  + 0.002),
    (0.5   - 0.002, 0.5   + 0.002),
    (1.0   - 0.002, 1.0   + 0.002),
    (2.0   - 0.002, 2.0   + 0.002),
    (4.0   - 0.002, 4.0   + 0.002),
]

def isValidTriplet(sumValue):
  for lower, upper in validTripletSums:
    if lower <= sumValue <= upper:
      return True
  return False

def tripValidity(tripletList):
  tempList = []
  for i in tripletList:
    if i < 0:
      tempList.append(i*-1)
    tempList.append(i)
  return isValidTriplet(sum(tempList))

def allValidTriplets(baseDurations):
  validCombinations = []
  for r in range(1, len(baseDurations) + 1):
    for combo in itertools.combinations_with_replacement(baseDurations, r):
      if isValidTriplet(sum(combo)):
        validCombinations.append(combo)
  return validCombinations

def cleanTriplets(durations, triplets, keepTriplets=True):
  #takes: ->a phrase, ->all triplet durations
  index = 0
  while index < len(durations):
    if durations[index] in triplets:
      if keepTriplets:
        tripletList = []
        startIndex = index
        while index < len(durations) and durations[index] in triplets:
          tripletList.append(durations[index])
          index += 1
        jump = indexJump(tripletList)
        if tripletList:
          del durations[startIndex + jump:startIndex + jump + len(tripletList)]
        index = startIndex + jump
        keepTriplets = False
      else:
        del durations[index]
    else:
      keepTriplets = True
      index += 1
  return durations


def indexJump(tripletList):
  sumDeleted = 0
  while True:
    found = False
    for windowSize in range(6, 1, -1):
      if len(tripletList) >= windowSize:
        window = tripletList[:windowSize]
        if tripValidity(window):
          sumDeleted += windowSize
          del tripletList[:windowSize]
          found = True
          break
    if not found:
      break
  return sumDeleted

#general cleaning

validDurations = [0.5, 1.0, 0.25, 0.75, 0.125, 2.0, 3.0, 0.3333, 1.5, 
             4.0, 0.375, 0.1667, 0.0625, 0.0833, 0.1875, 0.875, 
             0.6667, 1.75, 3.5, 3.75, -0.5, -0.375, -0.125, 
             -0.25, -1.0, -0.75, -2.0, -4.0, -0.3333, -1.5, 
             -2.5, -0.1875, -0.0625, -3.0, 0.2, 0.3, -0.0417, 
             0.0417, -0.1667, -0.6667, 0.1, -6.0, -9.0, -4.5, 
             -0.875, 6.0, -2.25, -0.0833, 1.3333]

def removeInvalidDurations(durations, valid = validDurations):
  cleaned = [i for i in durations if i in valid]
  return cleaned

def cleanDurations(durations, triplets):
  clean = removeInvalidDurations(durations)
  detriplet = cleanTriplets(clean, triplets)
  return detriplet

tests = [
    [0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.25, 0.25, 0.25, 0.125, 0.125, 0.375, 0.125, 0.125, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 3.0, 3.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333],
[0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.375, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.25, 0.25, 0.25],
[0.5, 0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 1.0, 2.0, -4.0, -4.0, -1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0],
[0.5, 0.5, 0.5, -0.25, 0.125, 0.125, 0.125, 0.6667, 0.375, 0.125, 0.125, 0.125, 0.125, 0.5, 0.5, 0.5, 1.0, 3.0, 1.0, 1.0, -1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 0.5, 0.5, -0.5, 0.5, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, -1.0, 1.5, 0.5, 1.5, 0.5, 1.0, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, -0.5, -0.5, -2.0, 1.0, 2.0],
[0.5, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 2.0, 2.0, 0.5, 0.5, 0.5, 0.5, 2.0, 1.0, 1.0, 0.5, 0.5, -0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.75, 0.125, 1.0],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, -1.0, -0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.125, -0.125, 0.125, 0.5, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, -0.5, 1.0, -1.0, 0.25, 0.25, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -2.0, 2.0, 2.0, 1.0, 1.5, 0.5, 0.5, 1.0, 1.0, -0.5, -1.0, -2.0, 2.0, 2.0, 2.0, 0.5, 0.5],
[0.5, 1.0, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.375, 0.125, 0.125, 0.25, 0.5, 0.5, -0.5, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25],
[0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 4.0, 4.0, 2.0, 2.0, 1.0, 1.0],
[0.5, 0.5, 0.5, 0.5, 1.0, -0.5, 0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.25, 0.125, 0.125, 0.125, 0.5, 2.0, -2.0, -2.0, -4.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
[0.5, 0.5, 2.0, 4.0, 4.0, 1.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, -2.0, -0.5, -1.0, 1.0, 0.5, 0.5, 0.5, 0.5, -0.5, 0.0708, -0.0833, -6.0, 0.05, 0.5, 0.5, 0.5, -1.0, 1.0, 1.0, -1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, 1.0, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.25, 0.25, 0.25, 0.75, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, 0.5, 0.5, 1.5, 1.5, 0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.375, 0.125, 0.125, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0],
[0.5, 0.5, 1.0, 1.0, -1.0, 1.0, 1.0, -0.5, -1.0, 1.5, 1.5, 0.5, 1.0, 1.0, 1.0, 1.5, 1.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, -0.5, 0.5, 1.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 3.0, 1.5, 1.0, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 1.0, 1.0, 0.5, -0.5, 1.5, 0.5],
[0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, -1.0, -1.0, 0.3333, 0.3333, 1.0, 1.0, 2.0, 2.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -1.0, 1.0],
[0.5, 0.5, 1.0, 1.0, 1.0, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, -0.25, 0.5, 0.5, 1.0, -2.0, 1.5, 1.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.25, -0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 2.0, 2.0, 2.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 0.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25],
[0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.3333, 0.3333, 0.3333, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, -0.5, -0.5, 0.125, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 1.0, -1.0, -0.5, 0.5, 1.0, 1.0, -0.5],
[0.5, 0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 1.0, 1.0, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, -1.0, -0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333],
[0.5, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, -0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 0.25, 0.25, 0.25, 0.25, 1.5, 0.5, 0.5, 0.5, -0.5, 1.0, 1.0, 1.0, -0.5, 0.5, -0.5, 0.5, -0.5, 0.375, 0.125, 0.125, 0.125, 0.5, 0.25],
[0.5, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -1.0, -3.0, -1.5, -1.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 2.0, 2.0, -1.0],
[0.5, 0.5, 0.5, 0.5, -1.0, -1.0, 1.0, 3.0, 3.0, 3.0, 1.0, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, -1.0, 0.25, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -1.0, 0.5, 0.5, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -0.5, -1.0, 3.0, -1.0, 1.0],
[0.5, 0.5, -0.5, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, -1.0, 1.5, 0.5, 2.0, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, -1.0, -0.5, -1.0, -3.0, 1.0, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333],
[0.5, 0.5, 0.3333, 0.3333, 0.3333, 1.0, 2.0, 1.0, 1.0, 1.0, -1.0, 1.5, 1.0, 1.0, 0.5, 0.25, 0.25, 0.5, -1.0, 1.0, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, -1.0, -2.0, -1.0, -1.0, -1.0],
[0.5, 0.5, 1.5, 0.5, 0.5, -0.5, 1.0, 3.0, 3.0, 3.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 0.375, 0.125, 0.125, 0.125, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 1.0, -1.0, -0.5, -1.0],
[0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, -0.5, 0.125, 1.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 1.0, -1.0],
[0.5, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 0.5, 0.5, -0.5, 0.5, 1.0, -1.0, -2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 2.0, 2.0, 1.0, -1.0, 0.5, 0.5, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 0.25, 0.25, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 2.0, 1.0],
[0.5, 0.5, 0.5, 0.5, 0.25, 1.5, 0.5, 1.0, -1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, -1.0, 1.0, -1.0, -2.0, -2.0, 0.5, -0.5, 1.0, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 0.5],
[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 3.0, 1.0, -2.0, -2.0, -4.0, -4.0, -0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, -1.0, 0.5, 0.5, 0.5, -1.0, 0.5, 0.25, 0.25, 0.25, 0.25],
[0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -1.0, -0.5, -0.5, 0.5, 1.0, 2.0, 2.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, -0.25],
[0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.75, 0.125, 0.125, 0.125, 0.25, 0.25, 0.25, -0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 4.0, 4.0, 4.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 1.0, -0.5, 0.5, 0.5, -1.0, 1.0, -1.0]
]

"""
for i in tests:
  print(i)
  print('original')
  print(cleanDurations(i, triplets))
  print('cleaned')
  print('next loading...')


validTriplets = [(0.3333, 0.1667), (0.3333, 0.6667), (0.1667, 0.0833),
  (0.0833, 0.0417), (0.6667, 1.3333), (0.3333, 0.3333, 0.3333),
  (0.3333, 0.3333, 1.3333), (0.3333, 0.0833, 0.0833), (0.1667, 0.1667, 0.1667),
  (0.1667, 0.1667, 0.6667), (0.1667, 0.0417, 0.0417), (0.0833, 0.0833, 0.0833),
  (0.6667, 0.6667, 0.6667), (0.0417, 0.0417, 0.0417), (1.3333, 1.3333, 1.3333),
  (0.3333, 0.3333, 0.1667, 0.1667), (0.3333, 0.3333, 0.6667, 0.6667),
  (0.3333, 0.1667, 0.1667, 1.3333), (0.3333, 0.0833, 0.0417, 0.0417),
  (0.1667, 0.1667, 0.0833, 0.0833), (0.1667, 0.0833, 0.0833, 0.6667),
  (0.0833, 0.0833, 0.0417, 0.0417), (0.6667, 0.6667, 1.3333, 1.3333),
  (0.3333, 0.3333, 0.3333, 0.3333, 0.6667), (0.3333, 0.3333, 0.1667, 0.0833, 0.0833),
  (0.3333, 0.3333, 0.6667, 1.3333, 1.3333), (0.3333, 0.1667, 0.1667, 0.1667, 0.1667),
  (0.3333, 0.1667, 0.1667, 0.6667, 0.6667), (0.3333, 0.1667, 0.0833, 0.0833, 1.3333),
  (0.3333, 0.0417, 0.0417, 0.0417, 0.0417), (0.1667, 0.1667, 0.1667, 0.1667, 1.3333),
  (0.1667, 0.1667, 0.0833, 0.0417, 0.0417), (0.1667, 0.0833, 0.0833, 0.0833, 0.0833),
  (0.1667, 0.0833, 0.6667, 0.0417, 0.0417), (0.0833, 0.0833, 0.0833, 0.0833, 0.6667),
  (0.0833, 0.0417, 0.0417, 0.0417, 0.0417), (0.6667, 0.6667, 0.6667, 0.6667, 1.3333),
  (0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333), (0.3333, 0.3333, 0.3333, 0.3333, 1.3333, 1.3333),
  (0.3333, 0.3333, 0.3333, 0.1667, 0.1667, 0.6667), (0.3333, 0.3333, 0.1667, 0.0833, 0.0417, 0.0417),
  (0.3333, 0.3333, 0.0833, 0.0833, 0.0833, 0.0833), (0.3333, 0.3333, 0.6667, 0.6667, 0.6667, 1.3333),
  (0.3333, 0.1667, 0.1667, 0.1667, 0.0833, 0.0833), (0.3333, 0.1667, 0.1667, 0.6667, 1.3333, 1.3333),
  (0.3333, 0.1667, 0.0833, 0.0833, 0.6667, 0.6667), (0.3333, 0.1667, 0.0833, 0.0417, 0.0417, 1.3333),
  (0.3333, 0.0833, 0.0833, 0.0833, 0.0833, 1.3333), (0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667),
  (0.1667, 0.1667, 0.1667, 0.1667, 0.6667, 0.6667), (0.1667, 0.1667, 0.1667, 0.0833, 0.0833, 1.3333),
  (0.1667, 0.1667, 0.0417, 0.0417, 0.0417, 0.0417), (0.1667, 0.0833, 0.0833, 0.0833, 0.0417, 0.0417),
  (0.1667, 0.6667, 0.0417, 0.0417, 0.0417, 0.0417), (0.0833, 0.0833, 0.0833, 0.0833, 0.0833, 0.0833),
  (0.0833, 0.0833, 0.0833, 0.6667, 0.0417, 0.0417), (0.6667, 0.6667, 0.6667, 0.6667, 0.6667, 0.6667),
  (0.0417, 0.0417, 0.0417, 0.0417, 0.0417, 0.0417)]
"""

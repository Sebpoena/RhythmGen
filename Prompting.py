#code for prompt based generation/continuation of a phrase
!pip install hmmlearn
from hmmlearn import hmm
from google.colab import drive
import csv
import numpy as np
import pandas as pd
import joblib

drive.mount('/content/drive')

models = ['g_m1_s16_iter10', 'g_m1_s24_iter20', 'g_m1_s32_iter30', 
          'g_m1_s40_iter40', 'g_m2_s30_iter50', 'g_m2_s36_iter60', 
          'g_m2_s42_iter70']

"""
#without rests
durations = [0.5, 1.0, 0.25, 0.75, 0.125, 2.0, 3.0, 0.3333, 1.5,
             4.0, 0.375, 0.1667, 0.0625, 0.0833, 0.1875, 0.875,
             0.6667, 1.75, 3.5, 3.75, 0.2, 0.3, 0.0417, 0.0354,
             0.025, 0.0312, 0.0271, 0.4, 0.05, 0.4292, 0.0563,
             0.0708, 0.1, 6.0, 0.0938, 1.3333]
durToIndex = {0.5: 0, 1.0: 1, 0.25: 2, 0.75: 3, 0.125: 4, 2.0: 5,
              3.0: 6, 0.3333: 7, 1.5: 8, 4.0: 9, 0.375: 10,
              0.1667: 11, 0.0625: 12, 0.0833: 13, 0.1875: 14,
              0.875: 15, 0.6667: 16, 1.75: 17, 3.5: 18, 3.75: 19,
              0.2: 20, 0.3: 21, 0.0417: 22, 0.0354: 23, 0.025: 24,
              0.0312: 25, 0.0271: 26, 0.4: 27, 0.05: 28, 0.4292: 29,
              0.0563: 30, 0.0708: 31, 0.1: 32, 6.0: 33, 0.0938: 34,
              1.3333: 35}
indexToDur = {0: 0.5, 1: 1.0, 2: 0.25, 3: 0.75, 4: 0.125, 5: 2.0,
              6: 3.0, 7: 0.3333, 8: 1.5, 9: 4.0, 10: 0.375, 11: 0.1667,
              12: 0.0625, 13: 0.0833, 14: 0.1875, 15: 0.875, 16: 0.6667,
              17: 1.75, 18: 3.5, 19: 3.75, 20: 0.2, 21: 0.3, 22: 0.0417,
              23: 0.0354, 24: 0.025, 25: 0.0312, 26: 0.0271, 27: 0.4,
              28: 0.05, 29: 0.4292, 30: 0.0563, 31: 0.0708, 32: 0.1,
              33: 6.0, 34: 0.0938, 35: 1.3333}
"""
#with rests
durations = [0.5, 1.0, 0.25, 0.75, 0.125, 2.0, 3.0, 0.3333, 1.5, 4.0, 
             0.375, 0.1667, 0.0625, 0.0833, 0.1875, 0.875, 0.6667, 1.75, 
             3.5, 3.75, -0.5, -0.375, -0.125, -0.25, -1.0, -0.75, -2.0, 
             -4.0, -0.3333, -1.5, -2.5, -0.1875, -0.0625, -3.0, 0.2, 0.3, 
             -0.0417, 0.0417, 0.0354, 0.025, -0.1667, 0.0312, 0.0208, 0.0271, 
             0.4, 0.05, 0.4292, -0.0042, 0.0563, 0.0708, -0.6667, 0.1, -6.0, 
             -9.0, -4.5, -0.0021, -0.875, 6.0, -0.0312, 0.0938, -2.25, -0.0833, 1.3333]
indexToDur = {0: 0.5, 1: 1.0, 2: 0.25, 3: 0.75, 4: 0.125, 5: 2.0, 6: 3.0, 
              7: 0.3333, 8: 1.5, 9: 4.0, 10: 0.375, 11: 0.1667, 12: 0.0625, 
              13: 0.0833, 14: 0.1875, 15: 0.875, 16: 0.6667, 17: 1.75, 18: 3.5, 
              19: 3.75, 20: -0.5, 21: -0.375, 22: -0.125, 23: -0.25, 24: -1.0, 
              25: -0.75, 26: -2.0, 27: -4.0, 28: -0.3333, 29: -1.5, 30: -2.5, 
              31: -0.1875, 32: -0.0625, 33: -3.0, 34: 0.2, 35: 0.3, 36: -0.0417, 
              37: 0.0417, 38: 0.0354, 39: 0.025, 40: -0.1667, 41: 0.0312, 42: 0.0208, 
              43: 0.0271, 44: 0.4, 45: 0.05, 46: 0.4292, 47: -0.0042, 48: 0.0563, 
              49: 0.0708, 50: -0.6667, 51: 0.1, 52: -6.0, 53: -9.0, 54: -4.5, 
              55: -0.0021, 56: -0.875, 57: 6.0, 58: -0.0312, 59: 0.0938, 60: -2.25, 
              61: -0.0833, 62: 1.3333}
durToIndex = {0.5: 0, 1.0: 1, 0.25: 2, 0.75: 3, 0.125: 4, 2.0: 5, 3.0: 6, 0.3333: 7, 
              1.5: 8, 4.0: 9, 0.375: 10, 0.1667: 11, 0.0625: 12, 0.0833: 13, 0.1875: 14, 
              0.875: 15, 0.6667: 16, 1.75: 17, 3.5: 18, 3.75: 19, -0.5: 20, -0.375: 21, 
              -0.125: 22, -0.25: 23, -1.0: 24, -0.75: 25, -2.0: 26, -4.0: 27, -0.3333: 28, 
              -1.5: 29, -2.5: 30, -0.1875: 31, -0.0625: 32, -3.0: 33, 0.2: 34, 0.3: 35, 
              -0.0417: 36, 0.0417: 37, 0.0354: 38, 0.025: 39, -0.1667: 40, 0.0312: 41, 
              0.0208: 42, 0.0271: 43, 0.4: 44, 0.05: 45, 0.4292: 46, -0.0042: 47, 0.0563: 48, 
              0.0708: 49, -0.6667: 50, 0.1: 51, -6.0: 52, -9.0: 53, -4.5: 54, -0.0021: 55, 
              -0.875: 56, 6.0: 57, -0.0312: 58, 0.0938: 59, -2.25: 60, -0.0833: 61, 1.3333: 62}


def snapToNearestToken(value, tokens):
  """finds the nearest real token to the model output"""
  return min(tokens, key=lambda token: abs(token - value))

def generate(model, length=16):
  """will generate phrases of a specified length with a specified model"""
  generated, _ = model.sample(length)
  rhythm = generated.flatten().tolist()
  print([val for val in rhythm])
  return [indexToDur[snapToNearestToken(i, indexToDur)] for i in rhythm]

def listGeneratedRhythms(lengthList, lengthPhrases = 32):
  """will generate a specified amount of phrases of a specified length"""
  newGeneratedRhythms = []
  for i in range(lengthList):
    x = generate(model, lengthPhrases)
    newGeneratedRhythms.append(x)
  return newGeneratedRhythms

def encodeDecode(phrase, encoder):
  """classic encoder to tokenise the data"""
  encoded = []
  for i in phrase:
    if i in encoder:
      encoded.append(encoder[i])
    else:
      continue
  return encoded

def continuePhrase(model, prompt, nSteps):
  """will generate based on a prompt given"""
  states = model.predict(prompt)
  lastState = states[-1]
  generated = prompt.flatten().tolist()
  for _ in range(nSteps):
    nextStateProbs = model.transmat_[lastState]
    nextState = np.random.choice(len(nextStateProbs), p=nextStateProbs)
    newObs = model.means_[nextState][0]
    snapped = snapToNearestToken(newObs, indexToDur)
    generated.append(snapped)
    lastState = nextState
  return generated

def singlePromptTest(model, prompt, nSteps, nPhrases = 100):
  """for testing multiple times on a single prompt"""
  formatted = np.array(encodeDecode(prompt, durToIndex)).reshape(-1, 1)
  output = []
  for i in range(nPhrases):
    phrase = encodeDecode(continuePhrase(model, formatted, nSteps), indexToDur)
    output.append(phrase)
  return output

def multiPromptTest(model, prompts, nSteps):
  """for testing on a list of multiple different prompts"""
  outMatrix = []
  for i in prompts:
    formatted = np.array(encodeDecode(i, durToIndex)).reshape(-1, 1)
    phrase = encodeDecode(continuePhrase(model, formatted, nSteps), indexToDur)
    outMatrix.append(phrase)
  return outMatrix

prompt = [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0]
promptMatrix = [
    #5 from Mozart
    [0.75, 0.25, 0.5, 1.0, 0.5],
    [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0],
    [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0],
    [0.75, 0.25, 0.5, 0.5],
    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0],
    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0],
    #5 from Beethoven
    [1.0, 1.0, 1.0, 1.0, 1.0, 1.5],
    [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0],
    [2.0, 0.3334, 0.3334, 0.3334, 0.3334, 0.3334, 0.3334, 1.0],
    [1.75, 0.25, 0.75, 0.25],
    [1.0, 1.0, 1.0, 2.0]
]
for i in models:
  print(f'testing model {i}')
  path = f'/content/drive/My Drive/MusicXML/{i}.pkl'
  model = joblib.load(path)
  test = singlePromptTest(model, prompt, 15, 30)
  test2 = multiPromptTest(model, promptMatrix, 5)
  print(test)
  print('---')
  print(test2)

"""
#newest testing
testing model g_m1_s16_iter10
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, -1.0, -1.0, -1.0, -1.0, 3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 1.0, -0.25, -0.25, -1.5, -1.5, -1.5, -1.5, -1.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -0.25, 3.0, 1.0, -0.25, -1.5, -1.5, -1.5, -1.5, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.25, 1.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, 1.0, -0.25, 1.75, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.75, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, 0.875, 0.5, 0.5, 3.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 3.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, 1.0, 1.0, 1.0, -0.25, 1.0, 1.0, 0.875], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 0.875, 0.5, 0.5, 0.5, -0.375], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.25, -0.25, 1.0, 1.0, 3.0, 3.0, 3.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 3.0, 1.0, 1.0, 1.0, 1.0, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -0.25, -1.0, -1.0, 3.0, 3.0, 3.0, 3.0, 3.0, 1.0, -0.25, -1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, -1.5, -1.0, 0.875, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0, -1.0, 3.0, -1.0, 0.875, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 0.875, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, -0.375, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5, 0.5, 0.5, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.25, -0.25, 1.0, -0.25, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, -1.5, -1.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.25, -0.25, 1.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.25, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 3.0, 3.0, 3.0, 1.0, 1.0, -0.25, 1.75, 1.0, 0.875, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.25, -1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.875, 0.5, 0.5, -0.375, 0.5, -0.375, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, -0.25, 1.0, 1.0, 1.0, -0.25], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, 1.0, 1.0, -0.25, 1.0, 1.0], [0.75, 0.25, 0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.75, 0.25, 0.75, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 2.0, 3.0, 3.0, 0.5, 1.0, 1.0]]
testing model g_m1_s24_iter20
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.5, -1.0, -1.0, -1.0, -0.5, -1.0, 1.0, 0.3333, 1.0, -0.5, -1.0, -4.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, -1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.75, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, -0.375, -0.125, 0.25, 0.25, 0.25, 0.25, 2.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.25, 0.75, -4.0, -0.375, -0.375, 1.0, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, -0.125, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.75, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 2.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 0.25, 0.75, 0.25, 0.25, 0.25, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.3333, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 1.0, 0.5, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 1.0, -1.0, -1.0, -4.0, -0.375, -0.375, 1.0, 1.0, 1.0, -1.0, -1.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.5, -4.0, -1.0, 1.0, -1.0, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 0.5, 0.5, 0.5, 0.3333, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 2.0, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 1.0, 0.5, 0.5, 1.0, 1.0, 1.0, -4.0, -0.375, 0.0625, 0.125, 0.125, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.3333, -4.0, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, -0.125, -0.125, 0.25, -0.125, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -1.0, 0.3333, 1.0, 0.5, -0.375, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 4.0, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 2.0, 2.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 0.5, 0.3333, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, -0.125, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -0.5, -0.5, -1.0, -4.0, 1.0, 1.0, 1.0, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 4.0, -0.375, -4.0, 1.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -4.0, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.3333, 4.0, 0.125, 0.125, 0.125, 0.125]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, -0.5, 0.5, 0.5, -0.375, 0.5], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, -1.0, -4.0, -1.0, -4.0, -1.0], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, -0.125, -0.75, 0.0625, 4.0, 1.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.25, 0.25, 0.25, 0.25], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, -0.5, 0.5, 2.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 0.5, 1.0, -1.0, 0.25, 0.25], [1.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [1.0, 1.0, 1.0, 2.0, 0.5, 0.3333, 1.5, 1.5, 1.5]]
testing model g_m1_s32_iter30
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, 1.0, -0.5, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -1.0, -2.0, 2.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 1.0, 0.5, -0.5, 0.5, -0.5, -1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 2.0, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.25, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -1.0, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -0.5, -0.5, -0.5, 0.5, -0.5, 0.25, 0.25, 0.25, 0.75, 0.25, 0.5, 0.5, 1.0, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 1.0, -0.5, 0.5, 1.0, 1.0, 1.0, -2.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -0.25, 0.25, 0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.3333, 1.5, 0.3333, 2.0, 2.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 0.5, 0.3333, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.3333, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 1.0, 0.5, 0.5, 0.3333, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.5, 0.3333, 0.5, 0.5, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, -0.5, -1.0, -2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.5, -1.0, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -1.0, -0.5, 0.5, 0.5, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, -1.0, -1.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -0.5, 0.3333, 1.0, 1.5, 0.3333, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -1.0, -3.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 0.5, 0.3333, 0.5, 0.5, 0.5, 0.5, -0.5, 0.3333, 0.5, -0.5, 0.5, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.3333, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.3333, 0.5, 0.5, 0.5, 1.0, -1.0, -1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, -1.0, -2.0, -4.0, 0.3333, 0.5, 0.5, 0.5, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 0.5, 1.0, 1.0, 1.0, 0.5, 1.0, -0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 1.0, 1.0, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 1.0, 1.0, 1.0, -0.75, 0.25, 0.75], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 2.0, 0.5, -0.5, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, -0.5, -1.0, -2.0, -2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 0.5, 0.5, -0.125, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 2.0, 2.0, 1.0]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, -1.0, -4.0, -4.0, -4.0, 0.3333], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, 0.5, 0.5, 1.0, 1.0, 0.3333], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, -1.0, 0.3333, 1.0, 1.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.5, -1.0, -0.5, 0.1667], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.5, -0.5, -0.5, 0.3333, 0.3333], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0], [2.0, 1.0, -0.75, -0.75, 1.0, 1.0, -2.0], [1.75, 0.25, 0.75, 0.25, 0.5, 1.0, 1.0, 0.75, 0.25], [1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0]]
testing model g_m1_s40_iter40
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 1.0, 0.25, 0.25, 1.0, -1.0, -3.0, -3.0, -3.0, -3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.125, 0.125, 0.125, 0.125, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.75, 0.25, 0.25, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 1.0, -0.5, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 1.0, 2.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 1.0, 3.0, 3.0, 3.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -1.0, 0.5, 0.5, 1.0, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.5, -1.0, -1.0, -2.0, -4.0, 3.0, 3.0, 2.0, 1.0, -1.0, 0.25, 0.25, -0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, 1.0, -0.5, 0.25, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, -1.0, 0.5, 1.0, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -0.5, -1.0, -2.0, 1.0, 0.25, 0.25, 1.5, -0.5, 0.1667, 0.1667, 0.1667, 0.1667], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, -2.0, 1.5, 0.5, 0.5, 4.0, -0.5, 0.5, 0.25, 0.125, 0.125, 0.125, 0.25, 0.25, 1.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 1.0, -1.0, 1.0, 1.0, 1.0, 4.0, 1.5, 0.5, 0.5, 0.5, -0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.25, 0.25, 0.25, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -0.75, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, -0.5, -2.0, 3.0, 1.0, -1.0, 0.25, 0.25, 0.025, 0.025, 0.025, 0.1667], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 1.0, -0.5, 0.5, 0.125, 0.125, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -0.25, 0.25, 0.25, 0.75, 0.125, 0.125, 0.125, 0.125, 0.125, 0.5, 0.5, 1.0, 0.5, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, -4.0, -0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.5, 0.5, -0.5, 1.0, -1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 1.0, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 2.0, 0.5, 1.0, 2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 1.0, -1.0, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.5, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25, 0.25, 1.5, 1.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -2.0, 1.0, -0.75, -3.0, 0.5, 0.25, 0.25, 1.0, -0.5, 2.0, 2.0, 1.0, 1.0, 4.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 0.5, -0.5, 1.5, -0.5, -0.5, 1.5, 0.5, 1.0, 1.0, 4.0, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.5, -0.5, -0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 1.0, -1.0, 0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.5, -0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 1.0, 0.75, 0.25, 0.25, 0.25]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, -0.75, 0.25, 0.25, 0.25, 0.5], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, -0.5, -1.0, -2.0, 2.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 0.5, 1.0, 0.5], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 1.0, 1.0, -1.0, 0.5, 0.1667], [2.0, 1.0, 0.5, 1.0, 0.5, 0.5, 0.5], [1.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25], [1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0]]
testing model g_m2_s30_iter50
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 1.5, 1.5, 1.5, 3.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 0.5, 0.5, 0.5, -0.5, 0.1667, 0.1667, 0.1667, 0.1667, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, -0.5, 0.5, 1.0, 0.0625, 0.1875, 0.1875, 0.1875, 2.0, 1.0, 1.0, 0.25, 1.5, 0.5, 1.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 0.5, 0.5, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 0.25, 0.25, 0.25, 2.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 1.0, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 2.0, 2.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 1.5, 0.5, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, 1.0, 0.25, 3.0, -1.0, 3.0, 2.0, -0.5, 0.25, 0.25, 3.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, 1.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -0.5, 1.5, 1.0, 0.25, 0.25, 0.25, 0.25, 2.0, 2.0, 2.0, 1.0, -1.0, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -1.0, -0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 1.0, 0.5, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, 1.5, 0.5, 1.0, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -1.0, -3.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -2.0, 1.0, 1.0, -1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, -2.0, 0.5, 0.5, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, -0.5, -1.0, -0.5, -0.5, -0.5, -0.5, -2.0, -1.5, -0.5, -1.0, 0.1875, 0.1875], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 3.0, 0.25, 0.25, 1.0, 0.5, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 3.0, 0.25, 0.25, 0.25, 2.0, 1.0, -1.0, 1.0, 1.0, -1.0, 2.0, 0.75, 0.125, 0.75], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, -0.5, 0.5, 0.5, 1.5, 0.5, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 1.5, 1.5, 1.5, 1.5, 1.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.5, 1.5, 1.0, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5, -0.5, -0.5, 0.5, 0.1875, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, -0.125, 0.125, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, -1.0, -1.0, -0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 1.0, 1.0, -0.5, -0.5, 0.5, 0.5, 1.0, -1.0, 1.0, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.5, 0.5, 1.0, -1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -2.0, 2.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, -0.25, 0.1875], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, -2.0, 2.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 2.0, 2.0, 0.25, -1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 3.0, 3.0, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 0.5, 0.5]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, -0.5, -1.5, 0.3333, 0.3333, 1.0], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, -1.0, 0.5, 0.5, 0.25, 0.25], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.5, 0.5, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 0.5, 0.5, 1.5], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5], [2.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0], [1.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0], [1.0, 1.0, 1.0, 2.0, 2.0, 1.0, -0.5, 0.5, 0.5]]
testing model g_m2_s36_iter60
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, -0.5, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.1667, 0.5, -0.5, -0.0625, -0.0625, 0.3333, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -4.0, -2.0, 2.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 2.0, 2.0, -1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 0.3333, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -4.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 0.75], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 1.0, 0.75, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -1.0, -2.0, -2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25, 0.5, 0.5, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, 2.0, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0, 0.5, 0.5, 1.0, -0.5, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.025, -0.5, 0.5, -0.5, 0.5, 1.5, 0.5, -0.5, 0.25, 0.25, -0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, -0.25, 0.25, 0.25, 0.25, 2.0, 2.0, 0.3333, 0.5, 0.5, 0.5, 0.5, -0.5, -1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, -1.0, -0.5, -1.0, -0.5, -0.5, 0.5, 0.5, 1.5, 1.5, 1.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 1.5, 0.25, 0.25, 0.25, -0.25, 0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, -0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.3333, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 0.5, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, -0.5, 1.0, 0.5, 0.5, -0.25, 0.25, 0.5, -1.0, 2.0, 1.5, 0.5, 0.5, -0.5, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, -0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, 0.5, 1.0, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -2.0, -0.25, 0.125, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0, -0.5, 0.5, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 1.0, -0.5, 0.25, 0.25, 0.25, 0.25, -0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, 0.25, 0.25, 0.25, -0.5, -1.0, -2.0, -1.0, -2.0, -1.0, -0.0625, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, -2.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.5, 1.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0, 0.5, 0.5, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, -0.5, -1.0, 0.5, 0.5, 1.5, 0.5, 0.5, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, -1.0, 0.3333, 0.3333, 0.3333, 0.3333]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, -0.5, 0.5, 0.5, 1.5, 0.5], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, -1.0, 0.5, 0.5, 0.5, 1.0], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.5, 0.5, 0.25, 0.25, 0.25], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 1.0, -1.0, -0.0625, -0.0625, 1.0], [2.0, 1.0, 0.125, 1.0, 1.0, 1.0, -1.0], [1.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [1.0, 1.0, 1.0, 2.0, 2.0, 0.5, 0.5, 0.5, 0.5]]
testing model g_m2_s42_iter70
[[2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, -1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, -0.25, 0.25, 0.25, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 3.0, 1.0, 0.5, 0.5, 0.5, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, -1.0, -2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, -0.25, 0.25, 0.25, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 1.0, -0.5, -1.0, -0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 2.0, 2.0, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, -2.0, 2.0, 1.0, 0.5, 0.5, 0.25, 0.25, 0.5, -0.25, 0.25, 0.25, 0.25, 0.25, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.25, 1.0, 1.0, 0.25, -0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 2.0, 1.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 1.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.3333, 0.3333, 0.3333, 2.0, 1.0, 0.5, 0.5, 0.5, 0.75, 0.25, 0.75, 0.125, 0.125, 0.125, 0.125], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 0.1667, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 0.5, 0.75, 0.25, 1.0, 1.0, -0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -2.0, -1.0, 1.0, -1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 1.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, -2.0, -2.0, 2.0, 1.0, 2.0, 2.0, 1.0, -0.5, -1.0, -0.5, -2.0, 1.0, -0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 0.5, 0.75, 0.125, 0.375, 0.125, 0.125, 0.125, 0.125, 0.25, 0.5, 0.25, 0.25, 2.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.5, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -3.0, 2.0, 1.5, 0.5, 1.0, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -0.5, -1.0, -2.0, -1.0, 1.0, 2.0, 2.0, 1.0, 1.0, -1.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 4.0, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.25, 0.5, -0.5, 1.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -0.5, 0.5, 0.5, 0.5, 1.0, 1.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 2.0, 2.0, 4.0, 2.0, 1.0, 3.0, 3.0, 3.0, 3.0, 1.0, 1.0, -0.25, 0.25, 0.25, 0.25], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.5, 0.5, 0.5, 0.5, 1.0, -0.5, 3.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 2.0, 2.0, 2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 2.0, 0.5, 0.5, -1.0, 1.0, 1.0, 1.0, 1.0, 4.0], [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0, 0.5, 0.5, 0.5, 1.0, 2.0, 2.0, 2.0, 0.75, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 2.0]]
---
[[0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, -1.0, -2.0], [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0, 0.3333, 1.5, 0.5, 0.5, 0.5], [0.75, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 1.0], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333], [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0, 0.5, 0.25, 0.25, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 0.5, 0.5, 0.5, 0.5], [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5], [2.0, 1.0, 1.0, 0.75, 0.25, 0.25, 0.5], [1.75, 0.25, 0.75, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25], [1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.25, 0.25, 0.25]]


#newer testing

prompt = [2.0, 1.0, 1.0, 1.5, 0.25, 0.25, 1.0]
promptMatrix = [
    #5 from Mozart
    [0.75, 0.25, 0.5, 1.0, 0.5],
    [0.75, 0.25, 0.5, 1.0, 0.5, 0.75, 0.25, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0, 0.5, 1.0],
    [2.0, 0.25, 0.25, 0.25, 0.25, 0.75, 0.25, 1.0],
    [0.75, 0.25, 0.5, 0.5],
    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0],
    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, 0.5, 1.0],
    #5 from Beethoven
    [1.0, 1.0, 1.0, 1.0, 1.0, 1.5],
    [1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 0.1667, 0.1667, 0.1667, 1.0],
    [2.0, 0.3334, 0.3334, 0.3334, 0.3334, 0.3334, 0.3334, 1.0],
    [1.75, 0.25, 0.75, 0.25],
    [1.0, 1.0, 1.0, 2.0]
]

test = singlePromptTest(model, prompt, 15, 30)
test2 = multiPromptTest(model, promptMatrix, 5)

filePath = "/content/drive/My Drive/MusicXML/M1_Test10_Multi5.csv"

with open(filePath, mode="w", newline="") as file:
    writer = csv.writer(file)
    writer.writerows(test2)

def checkCSV(location):
  df = pd.read_csv(location, header=None)
  print(df.head())

checkCSV(filePath)

#older testing

phrase = [0.5, 2.0, 0.125, 0.125, 0.125, 0.125, 0.5, 1.0]
tokenised = encodeDecode(phrase, durToIndex)
reshaped = np.array(tokenised).reshape(-1, 1)

promptList = continuePhrase(model, reshaped, 12)
decoded = encodeDecode(promptList, indexToDur)
print(decoded)

genList = listGeneratedRhythms(15)
print(genList)
"""
